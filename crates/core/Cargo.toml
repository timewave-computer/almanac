[package]
name = "indexer-core"
version.workspace = true
edition.workspace = true
authors.workspace = true
repository.workspace = true
license.workspace = true
description = "Core types and traits for the indexer"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
# Async runtime
tokio = { version = "1.0", features = ["full"] }
futures = "0.3"
async-trait = "0.1"

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde_bytes = "0.11"

# Text search
regex = "1.0"

# UUID generation
uuid = { version = "1.0", features = ["v4"] }

# Logging and error handling
tracing = "0.1"
thiserror = "1.0"
anyhow = "1.0"

# Database
sqlx = { version = "0.7", features = [
    "runtime-tokio-rustls",
    "postgres",
    "macros",
    "chrono",
    "uuid",
    "json"
], optional = true }
rocksdb = { version = "0.21", optional = true }

# Internal crates
indexer-pipeline = { path = "../pipeline" }

# Internal dependencies
indexer-common = { path = "../common" }

# Valence domain clients for proto integration
valence-domain-clients = { git = "https://github.com/timewave-computer/valence-domain-clients", rev = "766a1b593bcea9ed67b45c8c1ea9c548d0692a71" }

redis = { version = "0.24", features = ["tokio-comp"] }

md5 = "0.7"
flate2 = "1.0"

chrono = { version = "0.4", features = ["serde"] }

[features]
default = []
# Enable support for PostgreSQL storage
postgres = ["sqlx"]
# Enable support for RocksDB storage
rocks = ["rocksdb"] 